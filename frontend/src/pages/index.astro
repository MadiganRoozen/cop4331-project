---
import Layout from '../layouts/Layout.astro';
import Card from '../components/Card.astro';
---





<html>
<Layout title="Welcome to Astro.">
	<head>
		<link rel="stylesheet" href="style.css">
	</head>

	<body>
		<div id="page">

			<header>
				<!-- Will contain logo, title, and login button -->
				
				<img src="logo.png" alt="Hoof Hustler logo">
				

				<!-- login button  -->
				<button 
					onclick="document.getElementById('login-form').style.display='block'"
					style=
					"width: auto;
					float: right;
					margin: 0px auto;
					border-radius: 6px;
					position: absolute;
					top: 15px;
					right: 15px;
					"
					>Login
				</button>

				<!-- premium account button -->
				<!-- this should only be visible once the user is logged in and should replace the login button im just not sure how to do that -->
				<button 
					onclick="document.getElementById('premium-form').style.display='block'"
					style="width: auto;
					display: none;
					float: right;
					margin: 0px auto;
					border-radius: 6px;
					position: absolute;
					top: 15px;
					right: 15px;">Upgrade to Premium</button>

				<div id="premium-form" class="premium-modal">
					<form class="modal-content animate"
					action="/action_page.php"
					method="POST">
					<span 
							onclick="document.getElementById('premium-form').style.display='none'"
							class="close"
							title="Close Modal">&times;
						</span>
						
						<div class="container-top">
							
							<label for="code" style="color: #888"><b>Premium Code</b></label>
							<input type="text" placeholder="Premium Code" name="code" title="Enter code to create a premium account" required>

							<button type="submit"
								style="width:100%;
								padding:8px 18px;
								margin: 16px auto;
								display: inline-block;
								box-sizing: border-box;"
								>Submit
							</button>

						</div>
					
					</form>
				</div>

				<div id="login-form" class="login-modal">

					<form 
					class="modal-content animate"
					action="/action_page.php"
					method="POST"
					>	

						<!-- closing button -->
						<span 
							onclick="document.getElementById('login-form').style.display='none'"
							class="close"
							title="Close Modal">&times;
						</span>

						<!-- default profile pic image -->
						<div class="imgcontainer">
							<img src="img_avatar.png" alt="Avatar" class="avatar">
						</div>

						<!-- space to enter info -->
						<div class="container-top">
							<label for="uname" style="color: #888"><b>Username</b></label>
							<input type="text" placeholder="Enter Username" name="uname"
							required>

							<label for="psw" style="color: #888"><b>Password</b></label>
							<input type="password" placeholder="Enter Password" name="psw"
							required>
						
							<button type="submit"
							style="width:100%;
							padding:8px 18px;
							margin: 16px auto;
							display: inline-block;
							box-sizing: border-box;
							cursor: pointer;"
							>Submit</button>
						</div>

						<div class="container-bottom">
							<button onclick="document.getElementById('signup-form').style.display='block'; 
									document.getElementById('login-form').style.display='none'"
								type="button"	
								style="width:100%;
									   cursor: pointer;
									"
							>Create New Account
							</button>
						</div>
					</form>
				</div>

				<!-- create new account form -->
				<div id="signup-form" class="signup-modal">
					<form class="modal-content animate"
					      action="localhost:8080/auth/signup"
						  method="POST">
					<!-- put backend signup stuff in form?-->

						<!-- another closing button -->
						<span 
							onclick="document.getElementById('signup-form').style.display='none';
							document.getElementById('login-form').style.display='block'"
							class="close"
							title="close modal"
							>&times
						</span>

						<!-- signup form requires a username and a password, premium code is optional
							needs to be able to check if these are available before submitting -->
						<div class="container-top">
							<label for="uname" style="color: #888"><b>Username</b></label>
							<input type="text" placeholder="Enter Username" name="uname"
							required>

							<label for="psw" style="color: #888"><b>Password</b></label>
							<input type="password" placeholder="Enter Password" name="psw"
							required>

							<label for="code" style="color: #888"><b>Premium Code</b></label>
							<input type="text" placeholder="Premium Code" name="code" title="Enter code to create a premium account">

							<button type="submit"
								style="width:100%;
								padding:8px 18px;
								margin: 16px auto;
								display: inline-block;
								box-sizing: border-box;"
								>Submit
							</button>

						</div>
					</form>
				</div>

			</header>

			<main>
				<!-- timer -->
				<section id="timer-box">
					<div id="timer"></div>
				</section>

				<section id="flex-container">
					<!-- current race info. Includes all horses and their info along with space to bet on each horse -->
					<section class="sidebox">
						<h1>Next Race</h1>
						<div id="race-details">
							<table id="raceTrackWeatherTable">
								<tbody>
								</tbody>
							</table>
							<table id="raceDetailsTable">
								<tbody>
								</tbody>
							  </table>
						
		
						</div>
					</section>

					<section id="bet-box">
						<h1>Place your bet</h1>
						<div id="betting">
							<table id="betTable">
								<tbody>

								</tbody>
							</table>

						</div>
					</section>
		
					<section id="animation-box">
						<h1>Animation</h1>
						<div id="animation">
							<!-- No idea how to do whats going to be here -->
							<div style="position: relative; 
							width: 100%; 
							height: 0; 
							
							padding-top: 56.2500%;
							padding-bottom: 0; 
							box-shadow: 0 2px 8px 0 rgba(63,69,81,0.16); 
							margin-top: 1.6em; 
							margin-bottom: 0.9em; 
							overflow: hidden;
							border-radius: 8px;
							 will-change: transform;">
							 <iframe loading="lazy" style="position: absolute; 
							 width: 100%; 
							 height: 100%; 
							 top: 0; 
							 left: 0; 
							 border: none; 
							 padding: 0;
							 margin: 0;"
							 src="https:&#x2F;&#x2F;www.canva.com&#x2F;design&#x2F;DAGBlG4pnA0&#x2F;zta-jEmpjS_g03gMT0mEfQ&#x2F;watch?embed" allowfullscreen="allowfullscreen" allow="fullscreen">
							</iframe>
						</div>
						<a href="https:&#x2F;&#x2F;www.canva.com&#x2F;design&#x2F;DAGBlG4pnA0&#x2F;zta-jEmpjS_g03gMT0mEfQ&#x2F;watch?utm_content=DAGBlG4pnA0&amp;utm_campaign=designshare&amp;utm_medium=embeds&amp;utm_source=link" target="_blank" rel="noopener">Horse race</a> by J Trent
		
						</div>
					</section>

					<section class="sidebox">
						<h1>Results</h1>
						<div id="race-results">
							<!-- Table that will show the previous race details, the winner of the race, and whether or not the user won -->
							<table id="lastRaceTrackWeatherTable">
								<tbody>
									<tr>
										<td>Track</td> <td>&nbsp;</td>
									</tr>
									<tr>
										<td>Weather</td> <td>&nbsp;</td>
									</tr>
								</tbody>
							</table>
							<table id="lastRaceResultTable">
								<tbody>
									<tr>
										<td>Winner</td> <td>&nbsp;</td>
									</tr>
									<tr>
										<td>maneStyle</td> <td>&nbsp;</td>
									</tr>
									<tr>
										<td>race</td> <td>&nbsp;</td>
									</tr>
									<tr>
										<td>injuries</td> <td>&nbsp;</td>
									</tr>
									<tr>
										<td>tailLength</td> <td>&nbsp;</td>
									</tr>
								</tbody>
							  </table>
						</div>
					</section>

				</section>

				<section id="bottom">
					<h1>Last race</h1>
					<div id="last results">
						<!-- Will show results from the last few races-->
						<table id="lastResultsTable">
							<tbody>

							</tbody>
						</table>
			
					<div>
				</section>
		
			</main>

			<footer>
				<h1>All previous races</h1>
				<div id="all results">

					<button 
					onclick="showAllResults()"
					style=
					"width: auto;
					float: right;
					margin: 0px auto;
					border-radius: 6px;
					position: absolute;
					top: 15px;
					right: 15px;
					"
					>Login
				</button>
					<!--this table does not display until the button is pressed-->
					<table id="allResultsTable" style="display: none">
						<tbody>

						</tbody>
					</table>
			</footer>
		</div>
	

		<script>
			
			document.addEventListener("DOMContentLoaded", e=> {

				//connects to http server at post 8080, probably doesnt work, this is just code i got online
				fetch('http://localhost:8080/')
            	.then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.text();
            	})
            	.then(data => {
                	document.getElementById('response')!.textContent = data;
            	})
            	.catch(error => {
                	console.error('There was a problem with the fetch operation:', error);
            	});

				//needs url of websocket server
				//wss is secure form of websockets, use that instead for realsies
				const ws = new WebSocket("ws://localhost:8081"); //change this to the port of joe's game server

				//listening for connection to server
				ws.addEventListener("open", e=> {

					//on connection, display this message
					console.log("We are connected");

					function calcBet(bet: number, win: number){
						//figure out how much you get
					}

					function countdown(min: number, sec: number){
    					var element = document.getElementById("timer");
						var endTime = (+new Date) + 1000*(60*(min)+sec) + 500;

    					function twoDigits(n: number){
        					return (n <= 9 ? "0" + n : n);
    					}

    					function updateTimer(){
        					var msLeft = endTime - (+new Date);
        					if ( msLeft < 1000 ) {
            					element!.innerHTML = "Time is up!";
								countdown(0,10);
        					} else {
            					var time = new Date( msLeft );
           	 					var hours = time.getUTCHours();
            					var mins = time.getUTCMinutes();
            					element!.innerHTML = (hours ? hours + ':' + twoDigits( mins ) : mins) + ':' + twoDigits( time.getUTCSeconds() );
            					setTimeout( updateTimer, time.getUTCMilliseconds() + 500 );
        					}
    					}
    					updateTimer();
					}

					countdown(0,10);
				});


				//When a message is received
				ws.addEventListener("message", event=> {
					//event is an object which has properties, event.data would be the message that was received
					console.log(event);

					//dynamically creates a table for the upcoming race details using json objects from the HorseRace.java code running on its own server
					function makeRaceDetailsTable() {
    					let jsonData = JSON.parse(event.data);
						//this is the table we want to populate
						let tbody = document.querySelector("#raceTrackWeatherTable tbody");
						let table1 = document.createElement("table");

						for(var key in jsonData[0]){
							if(jsonData[0].hasOwnProperty(key)){
								const row = document.createElement('tr');
								const keyCell = document.createElement('td');
								const valueCell = document.createElement('td');
							
								keyCell.textContent = key;
          						valueCell.textContent = jsonData[0][key];

								row.appendChild(keyCell);
          						row.appendChild(valueCell);
								table1.appendChild(row);
							}
						}
						tbody!.appendChild(table1);



					
						tbody = document.querySelector("#raceDetailsTable tbody");
    					let table2 = document.createElement("table");


						for(var i=1; i<jsonData.length; i++){
							var isFirst = true;
							for(var key in jsonData[i]){
								if(jsonData[i].hasOwnProperty(key)){

          							const keyCell = document.createElement('td');
         							const valueCell = document.createElement('td');

          							keyCell.textContent = key;

									if(isFirst){
										var wrap1 = document.createElement("span");
										var textNode = document.createTextNode(jsonData[i][key]);
										wrap1.appendChild(textNode);
										wrap1.style.float = "left";

										const button = document.createElement("button");
										button.name = i.toString();

										var wrap2 = document.createElement("span");
										var arrow = document.createElement("span");
										arrow.classList.add("dArrow");
										button.style.marginTop = "3px";
										button.appendChild(arrow);

										button.addEventListener("click", function() {
											showRows(button.name);
										})

										wrap2.appendChild(button);
										wrap2.style.float = "right";
									
										valueCell.appendChild(wrap1);
										valueCell.appendChild(wrap2);
										isFirst = false;

										const row = document.createElement('th');
										row.appendChild(keyCell);
          								row.appendChild(valueCell);
										table2.appendChild(row);
									}
									else{
										valueCell.textContent = jsonData[i][key];

										const hiddenRow = document.createElement('tr');
										hiddenRow.classList.add("hrow" + i);
										hiddenRow.appendChild(keyCell);
          								hiddenRow.appendChild(valueCell);
										table2.appendChild(hiddenRow);

									}
								}
							}
						}
						tbody!.appendChild(table2);
  					}

					//makes the dropdown buttons in the race details table work
					function showRows(buttonName: string){
						var i = parseInt(buttonName);
						var hrows = document.querySelectorAll(".hrow"+i);
						var nothrows = document.querySelectorAll(".nothrow"+i);
						if(hrows.length == 0){
							nothrows.forEach(row => {
								row.className = "hrow"+i;
							});
						}
						else{
							hrows.forEach(row => {
								row.className = "nothrow"+i;
							});
						}
					}

					//Almost exactly the same as the last table maker, but chooses a different spot on the page to make the table
					function makeLastRaceResultTable(){
						let jsonData = JSON.parse(event.data);

						let tbody = document.querySelector("#lastRaceTrackWeatherTable tbody")
						let table1 = document.createElement("table");

						for(var key in jsonData[0]){
							if(jsonData[0].hasOwnProperty(key)){
								const row = document.createElement('tr');
								const keyCell = document.createElement('td');
								const valueCell = document.createElement('td');
							
								keyCell.textContent = key;
          						valueCell.textContent = jsonData[0][key];

								row.appendChild(keyCell);
          						row.appendChild(valueCell);
								table1.appendChild(row);
							}
						}
						tbody!.appendChild(table1);

						tbody = document.querySelector("#lastRaceResultTable tbody");
    					let table2 = document.createElement("table");

						for(var i=1; i<jsonData.length; i++){
							for(var key in jsonData[i]){
								if(jsonData[i].hasOwnProperty(key)){

									//make new row
									const row = document.createElement('tr');
          							const keyCell = document.createElement('td');
         							const valueCell = document.createElement('td');

          							keyCell.textContent = key;
									valueCell.textContent = jsonData[i][key];
								
									row.appendChild(keyCell);
          							row.appendChild(valueCell);
									//table consists of all rows
									table2.appendChild(row);
								}
							}
						}
						tbody!.appendChild(table2);

					}

					//creates the table with all the previous race results on server startup
					function makeAllRaceResultsTable(){
						let jsonData = JSON.parse(event.data);

						let tbody = document.querySelector("#allResultsTable tbody");
    					let table = document.createElement("table");

						for(var i=0; i<jsonData.length; i++){
							for(var key in jsonData[i]){
								if(jsonData[i].hasOwnProperty(key)){
									//make new row
									const row = document.createElement('tr');
          							const keyCell = document.createElement('td');
         							const valueCell = document.createElement('td');

          							keyCell.textContent = key;
									valueCell.textContent = jsonData[i][key];
								
									row.appendChild(keyCell);
          							row.appendChild(valueCell);
									//table consists of all rows
									table.appendChild(row);
								}
							}
						}
						tbody!.appendChild(table);
					}

					//checks if the user has premium and displays the results table if so. If not, the form to get premium shouyld pop up
					function showAllResults(){

					}

					//adds a new row to the top of the allRaceResultsTable each time a winner is announced
					function addNewRow(){
						
					}

					function makeBetTable(){
						let jsonData = JSON.parse(event.data);
						let tbody = document.querySelector("#betTable tbody");
						let table = document.createElement("table");

						const head = document.createElement('tr');
						const cell1 = document.createElement('td');
						const cell2 = document.createElement('td');
						cell1.textContent = "Horse";
						cell2.textContent = "Select";
						head.appendChild(cell1);
						head.appendChild(cell2);
						table.appendChild(head);

						for(var i=1; i<jsonData.length; i++){
							const value = String(Object.values(jsonData[i])[0]);
							//make new row
							const row = document.createElement('tr');
          					const valueCell = document.createElement('td');
							const checkCell = document.createElement('td');
							const checkbox = document.createElement('input');
							checkbox.type = 'checkbox';
							checkbox.className = 'betCheckbox';

							checkbox.addEventListener("click", function() {
								const checkboxes = document.querySelectorAll('.betCheckbox');
								if(this.checked){
									checkboxes.forEach(cb =>{
										if(cb != this){
											checkboxes.forEach(cb => {
                    							(cb as HTMLInputElement).disabled = true;
                							});
											this.disabled = false;
										}
									});
								}
								else{
									checkboxes.forEach(cb => {
                    					(cb as HTMLInputElement).disabled = false;
                					});
								}
							});
								
							checkCell.appendChild(checkbox);
							valueCell.textContent = value;
          					row.appendChild(valueCell);
							row.appendChild(checkCell);
							//table consists of all rows
							table.appendChild(row);
						}
						tbody!.appendChild(table);
						console.log("table created");
					}

					
					if(!event.data.includes("winner")){
					makeBetTable();
					makeRaceDetailsTable();
					}
					else if(event.data.includes("dateTime")){
					makeAllRaceResultsTable();
					addNewRow();
					}
					else if(event.data.includes("winner")){
					makeLastRaceResultTable();
					}
				});

			});

		</script>



	</body>
</Layout>
</html>
